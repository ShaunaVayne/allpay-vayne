<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.vayne.web.mapper.OrderItemsSkuDOMapper">
  <resultMap id="BaseResultMap" type="cn.vayne.web.model.OrderItemsSkuDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="item_id" jdbcType="BIGINT" property="itemId" />
    <result column="physics_id" jdbcType="BIGINT" property="physicsId" />
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="sku_name" jdbcType="VARCHAR" property="skuName" />
    <result column="specifications" jdbcType="VARCHAR" property="specifications" />
    <result column="tire_pattern" jdbcType="VARCHAR" property="tirePattern" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="addition" jdbcType="VARCHAR" property="addition" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_deleted" jdbcType="CHAR" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, item_id, physics_id, sku_id, sku_name, specifications, tire_pattern, 
    user_id, created_time, updated_time, creator, modifier, addition, remark, is_deleted
  </sql>
  <select id="selectByExample" parameterType="cn.vayne.web.model.OrderItemsSkuDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from order_items_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offSet !=null and length != null">
      limit ${offSet}, ${length}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_items_sku
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insertSelective" parameterType="cn.vayne.web.model.OrderItemsSkuDO">
    insert into order_items_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="physicsId != null">
        physics_id,
      </if>
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="specifications != null">
        specifications,
      </if>
      <if test="tirePattern != null">
        tire_pattern,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="addition != null">
        addition,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=BIGINT},
      </if>
      <if test="physicsId != null">
        #{physicsId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null">
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="tirePattern != null">
        #{tirePattern,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="addition != null">
        #{addition,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.vayne.web.model.OrderItemsSkuDOExample" resultType="java.lang.Long">
    select count(*) from order_items_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="cn.vayne.web.model.OrderItemsSkuDO">
    update order_items_sku
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=BIGINT},
      </if>
      <if test="physicsId != null">
        physics_id = #{physicsId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null">
        sku_id = #{skuId,jdbcType=BIGINT},
      </if>
      <if test="skuName != null">
        sku_name = #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="specifications != null">
        specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="tirePattern != null">
        tire_pattern = #{tirePattern,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="addition != null">
        addition = #{addition,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.vayne.web.model.OrderItemsSkuDO">
    update order_items_sku
    set order_id = #{orderId,jdbcType=BIGINT},
      item_id = #{itemId,jdbcType=BIGINT},
      physics_id = #{physicsId,jdbcType=BIGINT},
      sku_id = #{skuId,jdbcType=BIGINT},
      sku_name = #{skuName,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=VARCHAR},
      tire_pattern = #{tirePattern,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR},
      addition = #{addition,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
	<select id="selectItemByTime" parameterType="cn.vayne.web.domain.DTO.ExcelPoiReq" resultType="cn.vayne.web.model.SkuItemDo">
		SELECT
		group_concat( DISTINCT sku_id ) 'skuId',
		GROUP_CONCAT( DISTINCT sku_name ) 'skuName',
		GROUP_CONCAT( DISTINCT specifications ) 'specifications',
		order_id 'orderId'
		FROM
		order_items_sku
		WHERE
		order_id IN ( SELECT id FROM order_info WHERE created_time &gt;= #{begTime} AND created_time &lt;#{endTime} )
		GROUP BY
		order_id
	</select>
</mapper>