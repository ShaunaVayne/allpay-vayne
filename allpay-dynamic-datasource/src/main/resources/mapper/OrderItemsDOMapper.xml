<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.vayne.datasource.dao.OrderItemsDOMapper">
  <resultMap id="BaseResultMap" type="cn.vayne.datasource.model.OrderItemsDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="item_id" jdbcType="BIGINT" property="itemId" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_nums" jdbcType="INTEGER" property="itemNums" />
    <result column="item_image_url" jdbcType="VARCHAR" property="itemImageUrl" />
    <result column="unit_price" jdbcType="BIGINT" property="unitPrice" />
    <result column="item_type" jdbcType="CHAR" property="itemType" />
    <result column="halves_amount" jdbcType="DECIMAL" property="halvesAmount" />
    <result column="main_item_id" jdbcType="BIGINT" property="mainItemId" />
    <result column="group_code" jdbcType="VARCHAR" property="groupCode" />
    <result column="item_amount" jdbcType="BIGINT" property="itemAmount" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="addition" jdbcType="VARCHAR" property="addition" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_deleted" jdbcType="CHAR" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, item_id, item_name, item_nums, item_image_url, unit_price, item_type, 
    halves_amount, main_item_id, group_code, item_amount, user_id, created_time, updated_time, 
    creator, modifier, addition, remark, is_deleted
  </sql>
  <select id="selectByExample" parameterType="cn.vayne.datasource.model.OrderItemsDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from order_items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offSet !=null and length != null">
      limit ${offSet}, ${length}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_items
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insertSelective" parameterType="cn.vayne.datasource.model.OrderItemsDO">
    insert into order_items
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="itemNums != null">
        item_nums,
      </if>
      <if test="itemImageUrl != null">
        item_image_url,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="itemType != null">
        item_type,
      </if>
      <if test="halvesAmount != null">
        halves_amount,
      </if>
      <if test="mainItemId != null">
        main_item_id,
      </if>
      <if test="groupCode != null">
        group_code,
      </if>
      <if test="itemAmount != null">
        item_amount,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="addition != null">
        addition,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=BIGINT},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemNums != null">
        #{itemNums,jdbcType=INTEGER},
      </if>
      <if test="itemImageUrl != null">
        #{itemImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=BIGINT},
      </if>
      <if test="itemType != null">
        #{itemType,jdbcType=CHAR},
      </if>
      <if test="halvesAmount != null">
        #{halvesAmount,jdbcType=DECIMAL},
      </if>
      <if test="mainItemId != null">
        #{mainItemId,jdbcType=BIGINT},
      </if>
      <if test="groupCode != null">
        #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="itemAmount != null">
        #{itemAmount,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="addition != null">
        #{addition,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.vayne.datasource.model.OrderItemsDOExample" resultType="java.lang.Long">
    select count(*) from order_items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="cn.vayne.datasource.model.OrderItemsDO">
    update order_items
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=BIGINT},
      </if>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemNums != null">
        item_nums = #{itemNums,jdbcType=INTEGER},
      </if>
      <if test="itemImageUrl != null">
        item_image_url = #{itemImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=BIGINT},
      </if>
      <if test="itemType != null">
        item_type = #{itemType,jdbcType=CHAR},
      </if>
      <if test="halvesAmount != null">
        halves_amount = #{halvesAmount,jdbcType=DECIMAL},
      </if>
      <if test="mainItemId != null">
        main_item_id = #{mainItemId,jdbcType=BIGINT},
      </if>
      <if test="groupCode != null">
        group_code = #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="itemAmount != null">
        item_amount = #{itemAmount,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="addition != null">
        addition = #{addition,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.vayne.datasource.model.OrderItemsDO">
    update order_items
    set order_id = #{orderId,jdbcType=BIGINT},
      item_id = #{itemId,jdbcType=BIGINT},
      item_name = #{itemName,jdbcType=VARCHAR},
      item_nums = #{itemNums,jdbcType=INTEGER},
      item_image_url = #{itemImageUrl,jdbcType=VARCHAR},
      unit_price = #{unitPrice,jdbcType=BIGINT},
      item_type = #{itemType,jdbcType=CHAR},
      halves_amount = #{halvesAmount,jdbcType=DECIMAL},
      main_item_id = #{mainItemId,jdbcType=BIGINT},
      group_code = #{groupCode,jdbcType=VARCHAR},
      item_amount = #{itemAmount,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR},
      addition = #{addition,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>